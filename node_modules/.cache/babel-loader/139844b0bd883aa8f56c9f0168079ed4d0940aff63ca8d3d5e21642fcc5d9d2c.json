{"ast":null,"code":"// import {createStore} from \"redux\"\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState , action) => { \n//     if(action.type === 'increment') {\n//         return {\n//             counter : state.counter + 1,\n//             showCounter: state.showCounter \n\n//         }\n//     }\n\n//     if(action.type === 'increase') {\n//         return {\n//             counter : state.counter + action.amount,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === \"decrement\") {\n//         return {\n//             counter : state.counter - 1,\n//             showCounter: state.showCounter\n//         }\n//     }\n\n//     if(action.type === \"toggle\") {\n//         return {\n//             showCounter : !state.showCounter,\n//             counter : state.counter\n//         }\n//     }\n\n//     return  state;\n// } This code in redux method, and excuting code in reduxtool\n// in redux we use createStore but tools, we use configureStore\n\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'authentication',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["C:/Users/91891/React Redux/01-starting-project/01-starting-project/src/store/index.js"],"sourcesContent":["// import {createStore} from \"redux\"\r\nimport { createSlice,configureStore} from \"@reduxjs/toolkit\"\r\n\r\nconst initialState = {\r\n    counter : 0, showCounter : true\r\n}\r\n\r\nconst counterSlice = createSlice({\r\n    name : \"counter\",\r\n    initialState : initialState,\r\n    reducers : {\r\n        increment(state) {\r\n            state.counter++;\r\n        },\r\n        decrement(state) {\r\n            state.counter--\r\n        },\r\n        increase(state,action) {\r\n            state.counter = state.counter + action.payload\r\n        },\r\n        toggleCounter(state) {\r\n            state.showCounter = !state.showCounter;\r\n        }\r\n    }\r\n});\r\n\r\n// const counterReducer = (state = initialState , action) => { \r\n//     if(action.type === 'increment') {\r\n//         return {\r\n//             counter : state.counter + 1,\r\n//             showCounter: state.showCounter \r\n\r\n//         }\r\n//     }\r\n\r\n//     if(action.type === 'increase') {\r\n//         return {\r\n//             counter : state.counter + action.amount,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     }\r\n\r\n//     if(action.type === \"decrement\") {\r\n//         return {\r\n//             counter : state.counter - 1,\r\n//             showCounter: state.showCounter\r\n//         }\r\n//     }\r\n\r\n//     if(action.type === \"toggle\") {\r\n//         return {\r\n//             showCounter : !state.showCounter,\r\n//             counter : state.counter\r\n//         }\r\n//     }\r\n\r\n//     return  state;\r\n// } This code in redux method, and excuting code in reduxtool\r\n// in redux we use createStore but tools, we use configureStore\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated : false\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name : 'authentication',\r\n    initialState : initialAuthState,\r\n    reducers : {\r\n        login(state) {\r\n            state.isAuthenticated = true\r\n        },\r\n        logout(state) {\r\n            state.isAuthenticated = false\r\n        }\r\n    }\r\n})\r\n\r\nconst store = configureStore({\r\n    reducer : {counter : counterSlice.reducer, auth : authSlice.reducer },\r\n})\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;"],"mappings":"AAAA;AACA,SAASA,WAAW,EAACC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,YAAY,GAAG;EACjBC,OAAO,EAAG,CAAC;EAAEC,WAAW,EAAG;AAC/B,CAAC;AAED,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAG,SAAS;EAChBJ,YAAY,EAAGA,YAAY;EAC3BK,QAAQ,EAAG;IACPC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACN,OAAO,EAAE;IACnB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAACG,MAAM,EAAE;MACnBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,OAAO;IAClD,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACjBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IAC1C;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAMW,gBAAgB,GAAG;EACrBC,eAAe,EAAG;AACtB,CAAC;AAED,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC1BM,IAAI,EAAG,gBAAgB;EACvBJ,YAAY,EAAGa,gBAAgB;EAC/BR,QAAQ,EAAG;IACPW,KAAKA,CAACT,KAAK,EAAE;MACTA,KAAK,CAACO,eAAe,GAAG,IAAI;IAChC,CAAC;IACDG,MAAMA,CAACV,KAAK,EAAE;MACVA,KAAK,CAACO,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMI,KAAK,GAAGnB,cAAc,CAAC;EACzBoB,OAAO,EAAG;IAAClB,OAAO,EAAGE,YAAY,CAACgB,OAAO;IAAEC,IAAI,EAAGL,SAAS,CAACI;EAAQ;AACxE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGlB,YAAY,CAACmB,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAE5C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}